<application>
  <component name="VimSettings">
    <state version="4" enabled="true" />
    <globalmarks />
    <filemarks>
      <file name="/Dummy.txt" timestamp="1513579686648">
        <mark key="[" line="0" column="0" />
      </file>
      <file name="$APPLICATION_CONFIG_DIR$/consoles/db/d9d88941-e270-4467-8567-8bea9699bbdf/console_1.sql" timestamp="1513160784647">
        <mark key="[" line="0" column="0" />
      </file>
      <file name="$USER_HOME$/Development/secu_hub/secuHub/secuhub_common/pom.xml" timestamp="1513298528428">
        <mark key="'" line="24" column="0" />
        <mark key="[" line="5" column="27" />
        <mark key="]" line="5" column="31" />
        <mark key="." line="5" column="31" />
        <mark key="^" line="5" column="31" />
      </file>
      <file name="$USER_HOME$/Development/workspace/XPMS_20_Sophia_Admin_Tools_GUI/pom.xml" timestamp="1513314356823">
        <mark key="'" line="159" column="48" />
      </file>
      <file name="$USER_HOME$/Development/secu_hub/secuHub/secuhub_webUI/pom.xml" timestamp="1513298309337">
        <mark key="'" line="33" column="4" />
        <mark key="[" line="20" column="36" />
        <mark key="]" line="20" column="39" />
        <mark key="^" line="20" column="39" />
        <mark key="." line="20" column="39" />
      </file>
      <file name="$USER_HOME$/Development/workspace/sophia/XPMS_20_Sophia_Admin_Tools_GUI/pom.xml" timestamp="1513579357473">
        <mark key="'" line="473" column="21" />
        <mark key="[" line="238" column="8" />
        <mark key="]" line="254" column="20" />
        <mark key="." line="254" column="20" />
        <mark key="^" line="254" column="20" />
      </file>
      <file name="$USER_HOME$/Development/secu_hub/secuHub/secuhub_web_webUI_std/src/main/webapp/WEB-INF/web.xml" timestamp="1513300178940">
        <mark key="[" line="68" column="0" />
        <mark key="]" line="68" column="0" />
        <mark key="." line="68" column="0" />
      </file>
      <file name="$USER_HOME$/Development/workspace/aia-webddp/WebContent/WEB-INF/jsp/bizcard/bizcard_template_form.jsp" timestamp="1513576695206">
        <mark key="'" line="2" column="4" />
      </file>
      <file name="$USER_HOME$/Development/workspace/sophia/XPMS_20_Sophia_Admin_Tools_GUI/src/main/resources/Install_Config.xml" timestamp="1513576181274">
        <mark key="'" line="364" column="215" />
      </file>
      <file name="$USER_HOME$/Development/workspace/sophia/XPMS_20_Sophia_Admin_Tools_GUI/Install_Config.xml" timestamp="1513576164160">
        <mark key="'" line="364" column="215" />
        <mark key="[" line="36" column="57" />
        <mark key="]" line="36" column="55" />
        <mark key="^" line="36" column="55" />
        <mark key="." line="36" column="55" />
      </file>
      <file name="$USER_HOME$/Development/workspace/sophia/XPMS_20_Sophia_Admin_Tools_GUI/src/main/java/com/fujixerox/kor/sophia/application/SophiaExternalAuthenticationApplication.java" timestamp="1513578957170">
        <mark key="'" line="27503" column="46" />
        <mark key="[" line="27481" column="0" />
        <mark key="]" line="27481" column="0" />
        <mark key="^" line="1382" column="4" />
        <mark key="." line="27481" column="0" />
      </file>
      <file name="$USER_HOME$/Development/secu_hub/secuHub/secuhub_web_logmanager/target/secuhub.logmanager/WEB-INF/imageLogService.wsdl" timestamp="1513257119066">
        <mark key="[" line="90" column="54" />
        <mark key="]" line="90" column="54" />
        <mark key="." line="90" column="54" />
      </file>
      <file name="$USER_HOME$/Development/workspace/sophia/XPMS_20_Sophia_Admin_Tools_GUI/src/main/java/com/fujixerox/kor/sophia/intfc/http/XeroxHttpURLConnection.java" timestamp="1513580145467">
        <mark key="'" line="1033" column="131" />
        <mark key="[" line="1284" column="129" />
        <mark key="]" line="1284" column="144" />
        <mark key="." line="1284" column="144" />
        <mark key="^" line="1284" column="144" />
      </file>
      <file name="/a.sql" timestamp="1513160851033">
        <mark key="[" line="0" column="0" />
      </file>
      <file name="$USER_HOME$/Development/workspace/sophia/XPMS_20_Sophia_Admin_Tools_GUI/src/main/java/com/fujixerox/kor/sophia/intfc/http/XeroxSSMIRequest.java" timestamp="1513321765703">
        <mark key="'" line="711" column="4" />
        <mark key="[" line="711" column="12" />
        <mark key="." line="711" column="12" />
      </file>
      <file name="/pom.xml" timestamp="1513573193547">
        <mark key="'" line="397" column="29" />
      </file>
      <file name="$USER_HOME$/Development/workspace/sophia/XPMS_20/pom.xml" timestamp="1513579137994">
        <mark key="'" line="129" column="54" />
        <mark key="[" line="226" column="34" />
        <mark key="]" line="226" column="35" />
        <mark key="^" line="1330" column="23" />
        <mark key="." line="226" column="35" />
      </file>
      <file name="/dummy.sql" timestamp="1513576901594">
        <mark key="[" line="0" column="0" />
      </file>
      <file name="$USER_HOME$/Development/workspace/sophia/XPMS_20_Sophia_Admin_Tools_GUI/src/main/java/com/fujixerox/kor/imagelog/admintool/forwardRule/command/SetILRule.java" timestamp="1513567873266">
        <mark key="'" line="11" column="54" />
        <mark key="[" line="0" column="0" />
        <mark key="]" line="0" column="0" />
        <mark key="." line="0" column="0" />
      </file>
      <file name="$USER_HOME$/Development/workspace/aia-webddp/WebContent/WEB-INF/jsp/goods/goods_options_bizcard_form.jsp" timestamp="1513577209091">
        <mark key="'" line="0" column="0" />
        <mark key="[" line="146" column="0" />
        <mark key="]" line="146" column="0" />
        <mark key="^" line="146" column="46" />
        <mark key="." line="146" column="0" />
      </file>
      <file name="$USER_HOME$/Development/secu_hub/secuHub/secuhub_parent_web/pom.xml" timestamp="1513298349330">
        <mark key="'" line="58" column="24" />
        <mark key="[" line="11" column="18" />
        <mark key="]" line="11" column="18" />
        <mark key="." line="11" column="18" />
        <mark key="^" line="11" column="33" />
      </file>
    </filemarks>
    <jumps>
      <jump line="862" column="34" filename="$USER_HOME$/Development/workspace/sophia/XPMS_20/pom.xml" />
      <jump line="1064" column="29" filename="$USER_HOME$/Development/workspace/sophia/XPMS_20/pom.xml" />
      <jump line="11" column="33" filename="$USER_HOME$/Development/workspace/sophia/XPMS_20_Sophia_Admin_Tools_GUI/pom.xml" />
      <jump line="521" column="8" filename="$USER_HOME$/Development/workspace/sophia/XPMS_20_Sophia_Admin_Tools_GUI/pom.xml" />
      <jump line="1057" column="23" filename="$USER_HOME$/Development/workspace/sophia/XPMS_20/pom.xml" />
      <jump line="1192" column="23" filename="$USER_HOME$/Development/workspace/sophia/XPMS_20/pom.xml" />
      <jump line="556" column="8" filename="$USER_HOME$/Development/workspace/sophia/XPMS_20_Sophia_Admin_Tools_GUI/pom.xml" />
      <jump line="99" column="46" filename="$USER_HOME$/Development/workspace/sophia/XPMS_20/pom.xml" />
      <jump line="100" column="46" filename="$USER_HOME$/Development/workspace/sophia/XPMS_20/pom.xml" />
      <jump line="19" column="8" filename="$USER_HOME$/Development/workspace/sophia/XPMS_20_Sophia_Admin_Tools_GUI/pom.xml" />
      <jump line="1046" column="0" filename="$USER_HOME$/Development/workspace/sophia/XPMS_20/pom.xml" />
      <jump line="567" column="8" filename="$USER_HOME$/Development/workspace/sophia/XPMS_20_Sophia_Admin_Tools_GUI/pom.xml" />
      <jump line="488" column="0" filename="$USER_HOME$/Development/workspace/sophia/XPMS_20/pom.xml" />
      <jump line="578" column="8" filename="$USER_HOME$/Development/workspace/sophia/XPMS_20_Sophia_Admin_Tools_GUI/pom.xml" />
      <jump line="939" column="0" filename="$USER_HOME$/Development/workspace/sophia/XPMS_20/pom.xml" />
      <jump line="1367" column="0" filename="$USER_HOME$/Development/workspace/sophia/XPMS_20/pom.xml" />
      <jump line="468" column="20" filename="$USER_HOME$/Development/workspace/sophia/XPMS_20/pom.xml" />
      <jump line="470" column="0" filename="$USER_HOME$/Development/workspace/sophia/XPMS_20/pom.xml" />
      <jump line="1258" column="37" filename="$USER_HOME$/Development/workspace/sophia/XPMS_20/pom.xml" />
      <jump line="0" column="0" filename="$USER_HOME$/Development/workspace/sophia/XPMS_20/pom.xml" />
      <jump line="630" column="35" filename="$USER_HOME$/Development/workspace/sophia/XPMS_20_Sophia_Admin_Tools_GUI/pom.xml" />
      <jump line="112" column="9" filename="$USER_HOME$/Development/workspace/sophia/XPMS_20/pom.xml" />
      <jump line="318" column="66" filename="$USER_HOME$/Development/workspace/sophia/XPMS_20/pom.xml" />
      <jump line="322" column="34" filename="$USER_HOME$/Development/workspace/sophia/XPMS_20/pom.xml" />
      <jump line="18" column="8" filename="$USER_HOME$/Development/workspace/sophia/XPMS_20_Sophia_Admin_Tools_GUI/pom.xml" />
      <jump line="987" column="38" filename="$USER_HOME$/Development/workspace/sophia/XPMS_20/pom.xml" />
      <jump line="985" column="36" filename="$USER_HOME$/Development/workspace/sophia/XPMS_20/pom.xml" />
      <jump line="644" column="51" filename="$USER_HOME$/Development/workspace/sophia/XPMS_20_Sophia_Admin_Tools_GUI/pom.xml" />
      <jump line="12" column="52" filename="$USER_HOME$/Development/workspace/sophia/XPMS_20_Sophia_Admin_Tools_GUI/pom.xml" />
      <jump line="196" column="49" filename="$USER_HOME$/Development/workspace/sophia/XPMS_20_Sophia_Admin_Tools_GUI/pom.xml" />
      <jump line="212" column="49" filename="$USER_HOME$/Development/workspace/sophia/XPMS_20_Sophia_Admin_Tools_GUI/pom.xml" />
      <jump line="403" column="21" filename="$USER_HOME$/Development/workspace/sophia/XPMS_20_Sophia_Admin_Tools_GUI/pom.xml" />
      <jump line="399" column="21" filename="$USER_HOME$/Development/workspace/sophia/XPMS_20_Sophia_Admin_Tools_GUI/pom.xml" />
      <jump line="397" column="35" filename="$USER_HOME$/Development/workspace/sophia/XPMS_20_Sophia_Admin_Tools_GUI/pom.xml" />
      <jump line="429" column="19" filename="$USER_HOME$/Development/workspace/sophia/XPMS_20_Sophia_Admin_Tools_GUI/pom.xml" />
      <jump line="43" column="94" filename="$USER_HOME$/Development/workspace/sophia/XPMS_20_Sophia_Admin_Tools_GUI/pom.xml" />
      <jump line="313" column="244" filename="$USER_HOME$/Development/workspace/sophia/XPMS_20_Sophia_Admin_Tools_GUI/pom.xml" />
      <jump line="41" column="11" filename="$USER_HOME$/Development/workspace/sophia/XPMS_20/pom.xml" />
      <jump line="242" column="32" filename="$USER_HOME$/Development/workspace/sophia/XPMS_20/pom.xml" />
      <jump line="245" column="38" filename="$USER_HOME$/Development/workspace/sophia/XPMS_20/pom.xml" />
      <jump line="373" column="50" filename="$USER_HOME$/Development/workspace/sophia/XPMS_20/pom.xml" />
      <jump line="306" column="91" filename="/pom.xml" />
      <jump line="397" column="29" filename="/pom.xml" />
      <jump line="51" column="34" filename="$USER_HOME$/Development/workspace/sophia/XPMS_20_Sophia_Admin_Tools_GUI/pom.xml" />
      <jump line="57" column="56" filename="$USER_HOME$/Development/workspace/sophia/XPMS_20_Sophia_Admin_Tools_GUI/pom.xml" />
      <jump line="148" column="49" filename="$USER_HOME$/Development/workspace/sophia/XPMS_20_Sophia_Admin_Tools_GUI/pom.xml" />
      <jump line="87" column="48" filename="$USER_HOME$/Development/workspace/sophia/XPMS_20/pom.xml" />
      <jump line="120" column="93" filename="$USER_HOME$/Development/workspace/sophia/XPMS_20/pom.xml" />
      <jump line="122" column="53" filename="$USER_HOME$/Development/workspace/sophia/XPMS_20/pom.xml" />
      <jump line="130" column="60" filename="$USER_HOME$/Development/workspace/sophia/XPMS_20/pom.xml" />
      <jump line="204" column="42" filename="$USER_HOME$/Development/workspace/sophia/XPMS_20_Sophia_Admin_Tools_GUI/src/main/java/com/fujixerox/kor/sophia/application/SophiaExternalAuthenticationApplication.java" />
      <jump line="250" column="34" filename="$USER_HOME$/Development/workspace/sophia/XPMS_20_Sophia_Admin_Tools_GUI/src/main/java/com/fujixerox/kor/sophia/application/SophiaExternalAuthenticationApplication.java" />
      <jump line="640" column="42" filename="$USER_HOME$/Development/workspace/sophia/XPMS_20_Sophia_Admin_Tools_GUI/src/main/java/com/fujixerox/kor/sophia/application/SophiaExternalAuthenticationApplication.java" />
      <jump line="673" column="39" filename="$USER_HOME$/Development/workspace/sophia/XPMS_20_Sophia_Admin_Tools_GUI/src/main/java/com/fujixerox/kor/sophia/application/SophiaExternalAuthenticationApplication.java" />
      <jump line="1057" column="40" filename="$USER_HOME$/Development/workspace/sophia/XPMS_20_Sophia_Admin_Tools_GUI/src/main/java/com/fujixerox/kor/sophia/application/SophiaExternalAuthenticationApplication.java" />
      <jump line="1380" column="23" filename="$USER_HOME$/Development/workspace/sophia/XPMS_20_Sophia_Admin_Tools_GUI/src/main/java/com/fujixerox/kor/sophia/application/SophiaExternalAuthenticationApplication.java" />
      <jump line="2886" column="29" filename="$USER_HOME$/Development/workspace/sophia/XPMS_20_Sophia_Admin_Tools_GUI/src/main/java/com/fujixerox/kor/sophia/application/SophiaExternalAuthenticationApplication.java" />
      <jump line="2885" column="29" filename="$USER_HOME$/Development/workspace/sophia/XPMS_20_Sophia_Admin_Tools_GUI/src/main/java/com/fujixerox/kor/sophia/application/SophiaExternalAuthenticationApplication.java" />
      <jump line="1581" column="82" filename="$USER_HOME$/Development/workspace/sophia/XPMS_20_Sophia_Admin_Tools_GUI/src/main/java/com/fujixerox/kor/sophia/intfc/http/XeroxHttpURLConnection.java" />
      <jump line="1587" column="16" filename="$USER_HOME$/Development/workspace/sophia/XPMS_20_Sophia_Admin_Tools_GUI/src/main/java/com/fujixerox/kor/sophia/intfc/http/XeroxHttpURLConnection.java" />
      <jump line="1861" column="16" filename="$USER_HOME$/Development/workspace/sophia/XPMS_20_Sophia_Admin_Tools_GUI/src/main/java/com/fujixerox/kor/sophia/intfc/http/XeroxHttpURLConnection.java" />
      <jump line="43" column="66" filename="$USER_HOME$/Development/workspace/sophia/XPMS_20_Sophia_Admin_Tools_GUI/Install_Config.xml" />
      <jump line="364" column="215" filename="$USER_HOME$/Development/workspace/sophia/XPMS_20_Sophia_Admin_Tools_GUI/Install_Config.xml" />
      <jump line="18" column="39" filename="$USER_HOME$/Development/workspace/sophia/XPMS_20_Sophia_Admin_Tools_GUI/src/main/resources/Install_Config.xml" />
      <jump line="364" column="215" filename="$USER_HOME$/Development/workspace/sophia/XPMS_20_Sophia_Admin_Tools_GUI/src/main/resources/Install_Config.xml" />
      <jump line="0" column="0" filename="$USER_HOME$/Development/workspace/aia-webddp/WebContent/WEB-INF/jsp/bizcard/bizcard_template_form.jsp" />
      <jump line="128" column="33" filename="$USER_HOME$/Development/workspace/aia-webddp/WebContent/WEB-INF/jsp/bizcard/bizcard_template_form.jsp" />
      <jump line="2" column="4" filename="$USER_HOME$/Development/workspace/aia-webddp/WebContent/WEB-INF/jsp/bizcard/bizcard_template_form.jsp" />
      <jump line="147" column="52" filename="$USER_HOME$/Development/workspace/aia-webddp/WebContent/WEB-INF/jsp/goods/goods_options_bizcard_form.jsp" />
      <jump line="143" column="48" filename="$USER_HOME$/Development/workspace/aia-webddp/WebContent/WEB-INF/jsp/goods/goods_options_bizcard_form.jsp" />
      <jump line="139" column="36" filename="$USER_HOME$/Development/workspace/aia-webddp/WebContent/WEB-INF/jsp/goods/goods_options_bizcard_form.jsp" />
      <jump line="201" column="80" filename="$USER_HOME$/Development/workspace/aia-webddp/WebContent/WEB-INF/jsp/goods/goods_options_bizcard_form.jsp" />
      <jump line="183" column="61" filename="$USER_HOME$/Development/workspace/aia-webddp/WebContent/WEB-INF/jsp/goods/goods_options_bizcard_form.jsp" />
      <jump line="182" column="61" filename="$USER_HOME$/Development/workspace/aia-webddp/WebContent/WEB-INF/jsp/goods/goods_options_bizcard_form.jsp" />
      <jump line="181" column="61" filename="$USER_HOME$/Development/workspace/aia-webddp/WebContent/WEB-INF/jsp/goods/goods_options_bizcard_form.jsp" />
      <jump line="180" column="61" filename="$USER_HOME$/Development/workspace/aia-webddp/WebContent/WEB-INF/jsp/goods/goods_options_bizcard_form.jsp" />
      <jump line="179" column="61" filename="$USER_HOME$/Development/workspace/aia-webddp/WebContent/WEB-INF/jsp/goods/goods_options_bizcard_form.jsp" />
      <jump line="178" column="61" filename="$USER_HOME$/Development/workspace/aia-webddp/WebContent/WEB-INF/jsp/goods/goods_options_bizcard_form.jsp" />
      <jump line="0" column="0" filename="$USER_HOME$/Development/workspace/aia-webddp/WebContent/WEB-INF/jsp/goods/goods_options_bizcard_form.jsp" />
      <jump line="27436" column="44" filename="$USER_HOME$/Development/workspace/sophia/XPMS_20_Sophia_Admin_Tools_GUI/src/main/java/com/fujixerox/kor/sophia/application/SophiaExternalAuthenticationApplication.java" />
      <jump line="27582" column="53" filename="$USER_HOME$/Development/workspace/sophia/XPMS_20_Sophia_Admin_Tools_GUI/src/main/java/com/fujixerox/kor/sophia/application/SophiaExternalAuthenticationApplication.java" />
      <jump line="27549" column="0" filename="$USER_HOME$/Development/workspace/sophia/XPMS_20_Sophia_Admin_Tools_GUI/src/main/java/com/fujixerox/kor/sophia/application/SophiaExternalAuthenticationApplication.java" />
      <jump line="27503" column="46" filename="$USER_HOME$/Development/workspace/sophia/XPMS_20_Sophia_Admin_Tools_GUI/src/main/java/com/fujixerox/kor/sophia/application/SophiaExternalAuthenticationApplication.java" />
      <jump line="129" column="54" filename="$USER_HOME$/Development/workspace/sophia/XPMS_20/pom.xml" />
      <jump line="170" column="51" filename="$USER_HOME$/Development/workspace/sophia/XPMS_20_Sophia_Admin_Tools_GUI/pom.xml" />
      <jump line="130" column="76" filename="$USER_HOME$/Development/workspace/sophia/XPMS_20_Sophia_Admin_Tools_GUI/pom.xml" />
      <jump line="159" column="76" filename="$USER_HOME$/Development/workspace/sophia/XPMS_20_Sophia_Admin_Tools_GUI/pom.xml" />
      <jump line="177" column="76" filename="$USER_HOME$/Development/workspace/sophia/XPMS_20_Sophia_Admin_Tools_GUI/pom.xml" />
      <jump line="122" column="20" filename="$USER_HOME$/Development/workspace/sophia/XPMS_20_Sophia_Admin_Tools_GUI/pom.xml" />
      <jump line="197" column="46" filename="$USER_HOME$/Development/workspace/sophia/XPMS_20_Sophia_Admin_Tools_GUI/pom.xml" />
      <jump line="246" column="47" filename="$USER_HOME$/Development/workspace/sophia/XPMS_20_Sophia_Admin_Tools_GUI/pom.xml" />
      <jump line="243" column="28" filename="$USER_HOME$/Development/workspace/sophia/XPMS_20_Sophia_Admin_Tools_GUI/pom.xml" />
      <jump line="473" column="21" filename="$USER_HOME$/Development/workspace/sophia/XPMS_20_Sophia_Admin_Tools_GUI/pom.xml" />
      <jump line="0" column="0" filename="$USER_HOME$/Development/workspace/sophia/XPMS_20_Sophia_Admin_Tools_GUI/src/main/java/com/fujixerox/kor/sophia/intfc/http/XeroxHttpURLConnection.java" />
      <jump line="1722" column="0" filename="$USER_HOME$/Development/workspace/sophia/XPMS_20_Sophia_Admin_Tools_GUI/src/main/java/com/fujixerox/kor/sophia/intfc/http/XeroxHttpURLConnection.java" />
      <jump line="55" column="39" filename="$USER_HOME$/Development/workspace/sophia/XPMS_20_Sophia_Admin_Tools_GUI/src/main/java/com/fujixerox/kor/sophia/intfc/http/XeroxHttpURLConnection.java" />
      <jump line="1033" column="131" filename="$USER_HOME$/Development/workspace/sophia/XPMS_20_Sophia_Admin_Tools_GUI/src/main/java/com/fujixerox/kor/sophia/intfc/http/XeroxHttpURLConnection.java" />
      <jump line="38" column="35" filename="$USER_HOME$/Development/workspace/sophia/XPMS_20_Sophia_Admin_Tools_GUI/target/classes/com/fujixerox/kor/sophia/intfc/http/XeroxHttpURLConnection.class" />
      <jump line="1214" column="108" filename="$USER_HOME$/Development/workspace/sophia/XPMS_20_Sophia_Admin_Tools_GUI/target/classes/com/fujixerox/kor/sophia/intfc/http/XeroxHttpURLConnection.class" />
      <jump line="1079" column="54" filename="$USER_HOME$/Development/workspace/sophia/XPMS_20_Sophia_Admin_Tools_GUI/target/classes/com/fujixerox/kor/sophia/intfc/http/XeroxHttpURLConnection.class" />
    </jumps>
    <registers>
      <register name="&quot;" type="4">
        <text>axis/capture/jf?WSDL</text>
      </register>
      <register name="e" type="4">
        <keys>
          <key char="63" code="0" mods="0" />
          <key char="118" code="0" mods="0" />
          <key char="97" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="105" code="0" mods="0" />
          <key char="103" code="0" mods="0" />
          <key char="110" code="0" mods="0" />
          <key char="65535" code="10" mods="0" />
          <key char="63" code="0" mods="0" />
          <key char="119" code="0" mods="0" />
          <key char="105" code="0" mods="0" />
          <key char="100" code="0" mods="0" />
          <key char="116" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="61" code="0" mods="0" />
          <key char="65535" code="10" mods="0" />
          <key char="102" code="0" mods="0" />
          <key char="34" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="99" code="0" mods="0" />
          <key char="105" code="0" mods="0" />
          <key char="34" code="0" mods="0" />
          <key char="50" code="0" mods="0" />
          <key char="50" code="0" mods="0" />
          <key char="48" code="0" mods="0" />
          <key char="65535" code="27" mods="0" />
          <key char="47" code="0" mods="0" />
          <key char="60" code="0" mods="0" />
          <key char="116" code="0" mods="0" />
          <key char="97" code="0" mods="0" />
          <key char="98" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="101" code="0" mods="0" />
          <key char="65535" code="10" mods="0" />
          <key char="47" code="0" mods="0" />
          <key char="119" code="0" mods="0" />
          <key char="105" code="0" mods="0" />
          <key char="100" code="0" mods="0" />
          <key char="116" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="61" code="0" mods="0" />
          <key char="65535" code="10" mods="0" />
          <key char="102" code="0" mods="0" />
          <key char="34" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="99" code="0" mods="0" />
          <key char="105" code="0" mods="0" />
          <key char="34" code="0" mods="0" />
          <key char="50" code="0" mods="0" />
          <key char="50" code="0" mods="0" />
          <key char="48" code="0" mods="0" />
          <key char="65535" code="27" mods="0" />
          <key char="47" code="0" mods="0" />
          <key char="60" code="0" mods="0" />
          <key char="105" code="0" mods="0" />
          <key char="102" code="0" mods="0" />
          <key char="114" code="0" mods="0" />
          <key char="97" code="0" mods="0" />
          <key char="109" code="0" mods="0" />
          <key char="101" code="0" mods="0" />
          <key char="65535" code="10" mods="0" />
          <key char="47" code="0" mods="0" />
          <key char="115" code="0" mods="0" />
          <key char="116" code="0" mods="0" />
          <key char="121" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="101" code="0" mods="0" />
          <key char="65535" code="10" mods="0" />
          <key char="47" code="0" mods="0" />
          <key char="119" code="0" mods="0" />
          <key char="105" code="0" mods="0" />
          <key char="100" code="0" mods="0" />
          <key char="116" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="58" code="0" mods="0" />
          <key char="65535" code="10" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="102" code="0" mods="0" />
          <key char="112" code="0" mods="0" />
          <key char="98" code="0" mods="0" />
          <key char="51" code="0" mods="0" />
          <key char="120" code="0" mods="0" />
          <key char="105" code="0" mods="0" />
          <key char="50" code="0" mods="0" />
          <key char="50" code="0" mods="0" />
          <key char="48" code="0" mods="0" />
          <key char="65535" code="27" mods="0" />
          <key char="47" code="0" mods="0" />
          <key char="115" code="0" mods="0" />
          <key char="116" code="0" mods="0" />
          <key char="121" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="101" code="0" mods="0" />
          <key char="65535" code="10" mods="0" />
          <key char="47" code="0" mods="0" />
          <key char="119" code="0" mods="0" />
          <key char="105" code="0" mods="0" />
          <key char="100" code="0" mods="0" />
          <key char="116" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="58" code="0" mods="0" />
          <key char="65535" code="10" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="102" code="0" mods="0" />
          <key char="112" code="0" mods="0" />
          <key char="98" code="0" mods="0" />
          <key char="51" code="0" mods="0" />
          <key char="120" code="0" mods="0" />
          <key char="105" code="0" mods="0" />
          <key char="50" code="0" mods="0" />
          <key char="50" code="0" mods="0" />
          <key char="48" code="0" mods="0" />
          <key char="65535" code="27" mods="0" />
        </keys>
      </register>
      <register name="l" type="4">
        <text>/statistics/mac/statistics_usageList.do</text>
      </register>
      <register name="-" type="4">
        <text>axis/capture/jf?WSDL</text>
      </register>
      <register name="/" type="4">
        <text>class</text>
      </register>
      <register name="0" type="4">
        <text>FVO.usgeFlag</text>
      </register>
      <register name="1" type="2">
        <text encoding="base64"></text>
      </register>
      <register name="2" type="2">
        <text encoding="base64">Cg==</text>
      </register>
      <register name="r" type="4">
        <keys>
          <key char="63" code="0" mods="0" />
          <key char="118" code="0" mods="0" />
          <key char="97" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="105" code="0" mods="0" />
          <key char="103" code="0" mods="0" />
          <key char="110" code="0" mods="0" />
          <key char="65535" code="10" mods="0" />
          <key char="63" code="0" mods="0" />
          <key char="119" code="0" mods="0" />
          <key char="105" code="0" mods="0" />
          <key char="100" code="0" mods="0" />
          <key char="116" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="61" code="0" mods="0" />
          <key char="65535" code="10" mods="0" />
          <key char="102" code="0" mods="0" />
          <key char="34" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="99" code="0" mods="0" />
          <key char="105" code="0" mods="0" />
          <key char="34" code="0" mods="0" />
          <key char="50" code="0" mods="0" />
          <key char="50" code="0" mods="0" />
          <key char="48" code="0" mods="0" />
          <key char="65535" code="27" mods="0" />
          <key char="47" code="0" mods="0" />
          <key char="60" code="0" mods="0" />
          <key char="116" code="0" mods="0" />
          <key char="97" code="0" mods="0" />
          <key char="98" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="101" code="0" mods="0" />
          <key char="65535" code="10" mods="0" />
          <key char="47" code="0" mods="0" />
          <key char="119" code="0" mods="0" />
          <key char="105" code="0" mods="0" />
          <key char="100" code="0" mods="0" />
          <key char="116" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="61" code="0" mods="0" />
          <key char="65535" code="10" mods="0" />
          <key char="102" code="0" mods="0" />
          <key char="34" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="99" code="0" mods="0" />
          <key char="105" code="0" mods="0" />
          <key char="34" code="0" mods="0" />
          <key char="50" code="0" mods="0" />
          <key char="50" code="0" mods="0" />
          <key char="48" code="0" mods="0" />
          <key char="65535" code="27" mods="0" />
          <key char="47" code="0" mods="0" />
          <key char="60" code="0" mods="0" />
          <key char="105" code="0" mods="0" />
          <key char="102" code="0" mods="0" />
          <key char="114" code="0" mods="0" />
          <key char="97" code="0" mods="0" />
          <key char="109" code="0" mods="0" />
          <key char="101" code="0" mods="0" />
          <key char="65535" code="10" mods="0" />
          <key char="47" code="0" mods="0" />
          <key char="115" code="0" mods="0" />
          <key char="116" code="0" mods="0" />
          <key char="121" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="101" code="0" mods="0" />
          <key char="65535" code="10" mods="0" />
          <key char="47" code="0" mods="0" />
          <key char="119" code="0" mods="0" />
          <key char="105" code="0" mods="0" />
          <key char="100" code="0" mods="0" />
          <key char="116" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="58" code="0" mods="0" />
          <key char="65535" code="10" mods="0" />
          <key char="102" code="0" mods="0" />
          <key char="112" code="0" mods="0" />
          <key char="98" code="0" mods="0" />
          <key char="51" code="0" mods="0" />
          <key char="120" code="0" mods="0" />
          <key char="105" code="0" mods="0" />
          <key char="50" code="0" mods="0" />
          <key char="50" code="0" mods="0" />
          <key char="48" code="0" mods="0" />
          <key char="65535" code="27" mods="0" />
          <key char="47" code="0" mods="0" />
          <key char="112" code="0" mods="0" />
          <key char="97" code="0" mods="0" />
          <key char="116" code="0" mods="0" />
          <key char="116" code="0" mods="0" />
          <key char="101" code="0" mods="0" />
          <key char="114" code="0" mods="0" />
          <key char="110" code="0" mods="0" />
          <key char="45" code="0" mods="0" />
          <key char="98" code="0" mods="0" />
          <key char="111" code="0" mods="0" />
          <key char="116" code="0" mods="0" />
          <key char="116" code="0" mods="0" />
          <key char="111" code="0" mods="0" />
          <key char="109" code="0" mods="0" />
          <key char="65535" code="10" mods="0" />
          <key char="47" code="0" mods="0" />
          <key char="119" code="0" mods="0" />
          <key char="105" code="0" mods="0" />
          <key char="100" code="0" mods="0" />
          <key char="116" code="0" mods="0" />
          <key char="104" code="0" mods="0" />
          <key char="61" code="0" mods="0" />
          <key char="65535" code="10" mods="0" />
          <key char="102" code="0" mods="0" />
          <key char="34" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="99" code="0" mods="0" />
          <key char="105" code="0" mods="0" />
          <key char="34" code="0" mods="0" />
          <key char="50" code="0" mods="0" />
          <key char="50" code="0" mods="0" />
          <key char="48" code="0" mods="0" />
          <key char="65535" code="27" mods="0" />
        </keys>
      </register>
      <register name="3" type="2">
        <text encoding="base64">Cg==</text>
      </register>
      <register name="4" type="2">
        <text encoding="base64">Cg==</text>
      </register>
      <register name="t" type="4">
        <text>common.word_even_letter</text>
      </register>
      <register name="5" type="2">
        <text encoding="base64">CQkJQE92ZXJyaWRlCg==</text>
      </register>
      <register name="6" type="2">
        <text encoding="base64">CQkJQE92ZXJyaWRlCg==</text>
      </register>
      <register name="7" type="2">
        <text encoding="base64">CQkJCQkJCQlha2xqZGZrbGFqZGZrbGoK</text>
      </register>
      <register name="w" type="4">
        <keys>
          <key char="102" code="0" mods="0" />
          <key char="44" code="0" mods="0" />
          <key char="108" code="0" mods="0" />
          <key char="105" code="0" mods="0" />
          <key char="65535" code="10" mods="0" />
          <key char="65535" code="27" mods="0" />
          <key char="62" code="0" mods="0" />
          <key char="62" code="0" mods="0" />
          <key char="65535" code="27" mods="0" />
        </keys>
      </register>
      <register name="8" type="2">
        <text encoding="base64">Cg==</text>
      </register>
      <register name="9" type="2">
        <text encoding="base64">CQkJCQkJCQlhYWFhOiAke0ZWTy51c2dlRmxhZ30KCQkJCQkJCQliYmJiOiAke0ZMQUdfWUVTfQo=</text>
      </register>
      <register name=":" type="4">
        <text>w</text>
      </register>
    </registers>
    <search>
      <last-search>class</last-search>
      <last-offset />
      <last-pattern>class</last-pattern>
      <last-dir>1</last-dir>
      <show-last>false</show-last>
    </search>
    <history>
      <history-search>
        <entry>token</entry>
        <entry encoding="base64">XDxidWlsZFJldmlzaW9uXD4=</entry>
        <entry>buildV</entry>
        <entry>build</entry>
        <entry>buildver</entry>
        <entry>main</entry>
        <entry>capture</entry>
        <entry>N</entry>
        <entry>N\/A</entry>
        <entry>include</entry>
        <entry encoding="base64">XDxGVk9cPg==</entry>
        <entry>FVO</entry>
        <entry>compil</entry>
        <entry>compile</entry>
        <entry>plugins</entry>
        <entry>1.6</entry>
        <entry>axis</entry>
        <entry>ws</entry>
        <entry>static cl</entry>
        <entry>class</entry>
      </history-search>
      <history-cmd>
        <entry>312</entry>
        <entry>set vim-surround</entry>
        <entry>set surround</entry>
        <entry>on</entry>
        <entry>only</entry>
        <entry>ls</entry>
        <entry>43</entry>
        <entry>60</entry>
        <entry>831</entry>
        <entry>88</entry>
        <entry>37</entry>
        <entry>vs</entry>
        <entry>140</entry>
        <entry>903</entry>
        <entry>63</entry>
        <entry>q</entry>
        <entry>19</entry>
        <entry>wq</entry>
        <entry>1:$d</entry>
        <entry>w</entry>
      </history-cmd>
      <history-expr />
      <history-input />
    </history>
    <shortcut-conflicts>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed B</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed F</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed N</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed V</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed A</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed M</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed C</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed E</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed Q</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed S</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed Y</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed P</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed W</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed R</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed H</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed CLOSE_BRACKET</text>
      </shortcut-conflict>
      <shortcut-conflict owner="ide">
        <text>ctrl pressed OPEN_BRACKET</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed X</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed O</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed U</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed G</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed 2</text>
      </shortcut-conflict>
      <shortcut-conflict owner="vim">
        <text>ctrl pressed D</text>
      </shortcut-conflict>
    </shortcut-conflicts>
  </component>
</application>